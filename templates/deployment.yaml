apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}
  labels:
{{ include "chart.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "chart.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "chart.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ template "chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      priorityClassName: high-priority  
      volumes:
      - name: frontend-config-volume 
        configMap:
          name: frontend-config
      - name: frontend-files
        persistentVolumeClaim:
          claimName: frontend-files
      - name: init-script
        configMap:
          name: frontend-init-script
          defaultMode: 0555
      - name: backups
        persistentVolumeClaim:
          claimName: backups
      - name: patched-files
        emptyDir: {}
      {{- if .Values.extra_instr_dir.enabled }}
      - name: instruments-dir
        persistentVolumeClaim:
          claimName: instruments-dir
      {{- end }}
          #{{ if .Values.dev_space_volume.enabled }}
          #      - name: frontend-dev
          #        {{- toYaml .Values.dev_space_volume.volume | nindent 8 }}
          #      {{ end }}
      initContainers:
        - name: frontend-initialiser
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ['/init-script.sh']
          volumeMounts:
            - name: init-script
              mountPath: /init-script.sh
              subPath:  init-script.sh
            - name: patched-files
              mountPath: /patched-files
              readOnly: false
            - name: frontend-files
              mountPath: /var/www/mmoda/sites/default/files
              readOnly: false
            {{- if .Values.extra_instr_dir.enabled }}
            - name: instruments-dir
              mountPath: /instruments-dir
              readOnly: false
            {{- end }}
            - name: backups
              mountPath: /backups
              readOnly: true
          env:
            - name: PASSWORD
              valueFrom: 
                secretKeyRef:
                  name: {{ .Values.mysql_pw_secret }}
                  key: mysql-password
            - name: MMODA_BASE_URL
              value: {{ .Values.mmoda_base_url }}
            - name: MMODA_MODULES
              value: {{ join "," .Values.static_modules }}
            - name: DRUPAL_PW
              valueFrom: 
                secretKeyRef:
                  name: {{ .Values.frontend_secret }}
                  key: drupal-pw
            - name: JWT_KEY
              valueFrom: 
                secretKeyRef:
                  name: {{ .Values.frontend_secret }}
                  key: jwt-key
            - name: JWT_EXPIRATION
              value: "{{ .Values.jwt_link_expiration }}"
            - name: JWT_URL
              value: {{ .Values.jwt_link_url }}     
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: {{ .Values.mmoda_prefix }}
              port: http
            failureThreshold: 5
            initialDelaySeconds: 15
            periodSeconds: 60
            timeoutSeconds: 60
          readinessProbe:
            httpGet:
              path: {{ .Values.mmoda_prefix }}
              port: http
            failureThreshold: 5
            initialDelaySeconds: 5
            periodSeconds: 60
            timeoutSeconds: 60
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          #env:
          volumeMounts:
          - name: frontend-config-volume
            mountPath: /etc/apache2/sites-enabled/default-ssl.conf
            subPath: etc-apache2-site-ssl.conf
            readOnly: true
          - name: frontend-config-volume
            mountPath: /etc/apache2/apache2.conf
            subPath: etc-apache2.conf
            readOnly: true
          - name: patched-files
            mountPath: /var/www/mmoda/sites/default/settings.php
            subPath: settings.php
            readOnly: true       
          - name: patched-files
            mountPath: /var/www/mmoda/sites/all/modules/mmoda/mmoda.nameresolver.inc
            subPath: mmoda.nameresolver.inc         
          - name: frontend-files
            mountPath: /var/www/mmoda/sites/default/files
            readOnly: false
          {{ if .Values.dev_space_volume.enabled }}
          - name: frontend-dev
            mountPath: /var/www/mmooda/dev
            subPath: {{ .Values.dev_space_volume.subPath }}
            readOnly: true                
          {{ end }}
          {{- if .Values.extra_instr_dir.enabled }}
          - name: instruments-dir
            mountPath: /var/www/mmoda/sites/all/modules/mmoda/instruments
            readOnly: false
          {{- end }}
        - name: backup
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
          - bash
          - -c
          - |
            set -x
            while true; do 
              mysql -h mysql -u astrooda -p$PASSWORD astrooda > /backups/state-snapshot-$(date +%s).sql              
              sleep 3600; 
            done


          volumeMounts:
            - name: backups
              mountPath: /backups
              readOnly: false
          env:
            - name: PASSWORD
              valueFrom: 
                secretKeyRef:
                  name: {{ .Values.mysql_pw_secret }}
                  key: mysql-password
            
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}

